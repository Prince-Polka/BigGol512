http://thebookofshaders.com/edit.php?log=170619182253

testing line-intersection between fragcoord + distant point, against all sides of poly, if even number of intersections point is inside  

#ifdef GL_ES
precision mediump float;
#endif

uniform vec2 u_resolution;
uniform vec2 u_mouse;
uniform float u_time;
vec2 poly[13];


bool side( vec2 A, vec2 B, vec2 C) {
    return dot(vec2(B.y-A.y,A.x-B.x),C-A)>=0.;
}

bool sectline(vec2 A, vec2 B, vec2 C, vec2 D){
    return side(A,B,C) != side(A,B,D) && side(C,D,A) != side(C,D,B);
}

bool polygon(){
    vec2 A = gl_FragCoord.xy;
    vec2 B =  u_mouse;
    int num = 0;
    for (int i=0; i<12; i++){
        if ( sectline(A,B,poly[i],poly[i+1]) ){
            num++;
        }
    }
    if (num==1 || num == 3 || num == 5){return true;}
    return false;
}

void main() {
    float d=0.;
    poly[0]=vec2(100.,100.);
    poly[1]=vec2(100.,200.);
    poly[2]=vec2(120.,200.);
    poly[3]=vec2(120.,160.);
    poly[4]=vec2(180.,160.);
    poly[5]=vec2(180.,200.);
    poly[6]=vec2(200.,200.);
    poly[7]=vec2(200.,100.);
    poly[8]=vec2(180.,100.);
    poly[9]=vec2(180.,140.);
    poly[10]=vec2(120.,140.);
    poly[11]=vec2(120.,100.);
    poly[12]=vec2(100.,100.);
    
    if (polygon()){
        d=1.0;
    }

    gl_FragColor = vec4(vec3(d),1.0);
}




void main() {
    float d=0.;
    poly[0]=vec2(100.,100.);
    poly[1]=vec2(100.,200.);
    poly[2]=vec2(120.,200.);
    poly[3]=vec2(120.,160.);
    poly[4]=vec2(180.,160.);
    poly[5]=vec2(180.,200.);
    poly[6]=vec2(200.,200.);
    poly[7]=vec2(200.,100.);
    poly[8]=vec2(180.,100.);
    poly[9]=vec2(180.,140.);
    poly[10]=vec2(120.,140.);
    poly[11]=vec2(120.,100.);
    poly[12]=vec2(100.,100.);
    
    if (polygon()){
        d=1.0;
    }

    gl_FragColor = vec4(vec3(d),1.0);
}
